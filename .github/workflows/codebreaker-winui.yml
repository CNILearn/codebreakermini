name: WinUI Deployment

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - 'src/clients/xaml/CodeBreaker.WinUI/**'
    - '.github/workflows/codebreaker-winui.yml'

  # Allow mannually trigger 
  workflow_dispatch:      

jobs:
  build:

    strategy:
      matrix:
        configuration: [Release]
        platform: [x64, x86]

    runs-on: windows-latest

    env:
      Solution_File: src/CodeBreaker.WinUI.sln
      ViewModel_TestProject: src/clients/xaml/CodeBreaker.ViewModels.Tests/CodeBreaker.ViewModel.Tests.csproj
      WinUI_Project_Folder: src/clients/xaml/CodeBreaker.WinUI

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'
          
     # - name: Run ViewModel-Unit tests
     #   run: dotnet test $env:ViewModel_TestProject

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:WinUI_Project_Folder /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}   

      # Decode the base 64 encoded pfx and save the Signing_Certificate
      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.WINUI_BASE64_ENCODED_PFX }}")
          $certificatePath = "GitHubActionsWorkflow.pfx"
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
      
      # Create the app package by building and packaging the project
      - name: Create the app package
        run: msbuild $env:WinUI_Project_Folder /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:AppxPackageDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true
        env:
          Appx_Bundle: Never
          Appx_Package_Build_Mode: SideloadOnly
          Appx_Package_Dir: Packages\
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}

       # Remove the pfx
      - name: Remove the pfx
        run: Remove-Item -path GitHubActionsWorkflow.pfx    

       # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Upload MSIX package
        uses: actions/upload-artifact@v3
        with:
          name: MSIX Package
          path: ${{ env.WinUI_Project_Folder }}\\Packages
          retention-days: 5
